# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  pull_request:
  push:
    branches:
      - master

name: "Continuous Integration"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: mbstring
          php-version: 7.4

      - name: "Validate composer.json and composer.lock"
        run: composer validate --strict

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress

      - name: "Run localheinz/composer-normalize"
        run: composer normalize --dry-run

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: mbstring
          php-version: 7.4

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress

      - name: "Run phpstan"
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon

  tests:
    name: Test for PHP ${{ matrix.php-version }} (${{ matrix.dependencies }})

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"

        dependencies:
          - "prefer-lowest"
          - "prefer-stable"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: mbstring
          php-version: ${{ matrix.php-version }}

      - name: "Install dependencies with composer"
        run: composer update --${{ matrix.dependencies }} --no-interaction --no-progress

      - name: "Run unit tests with phpunit/phpunit"
        run: vendor/bin/phpunit

  code-coverage:
    name: "Code Coverage"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          extensions: mbstring
          php-version: 7.4

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress

      - name: "Dump Xdebug filter with phpunit/phpunit"
        run: vendor/bin/phpunit --dump-xdebug-filter=.build/phpunit/xdebug-filter.php

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: vendor/bin/phpunit --coverage-clover=.build/logs/clover.xml --prepend=.build/phpunit/xdebug-filter.php

      - name: "Send code coverage report to codecov.io"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
